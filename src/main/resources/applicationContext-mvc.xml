<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd

		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<!-- 配置Fastjson支持 -->
			<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
				<property name="features">
					<list>
						<value>WriteNullStringAsEmpty</value>
						<value>QuoteFieldNames</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<task:annotation-driven executor="executor" scheduler="scheduler"/>
	<task:scheduler id="scheduler" pool-size="10" />
	<task:executor id="executor" pool-size="5" />
	<!-- 自动搜索标注的类 -->
	<context:component-scan base-package="com">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	 <!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" /> 
	--></context:component-scan>
	<!-- 当SpringMvC容器启动完成后执行下面的这个Bean -->
   <!--  <bean class="com.xmbl.ops.itstack.InitializationNettyServer"/> -->

	<!--由于web.xml中设置是由springMVC拦截所有请求，于是在读取静态资源文件的时候就会受到影响（说白了就是读不到） 经过下面的配置，该标签的作用就是所有页面中引用/css/**的资源，都会从/resources/styles/ 
        里面查找 -->
    <mvc:resources mapping="/assets/**" location="/assets/" />
    <mvc:resources mapping="/commons/**" location="/commons/" />
    <mvc:resources mapping="/commpiler/**" location="/compiler/" />
    <mvc:resources mapping="/css/**" location="/css/" />
    <mvc:resources mapping="/hplus/**" location="/hplus/" />
    <mvc:resources mapping="/image/**" location="/image/" />
    <mvc:resources mapping="/js/**" location="/js/" />
    <mvc:resources mapping="/json/**" location="/json/" />
    <mvc:resources mapping="/jsp/**" location="/jsp/" />
    <mvc:resources mapping="/page/**" location="/page/" />
    <mvc:resources mapping="/plugins/**" location="/plugins/" />
    <mvc:resources mapping="/public/**" location="/public/" />
    <mvc:resources mapping="/scss/**" location="/scss/" />
    <mvc:resources mapping="/upload/**" location="/upload/" />
	
	<aop:aspectj-autoproxy />
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass">
			<value>org.springframework.web.servlet.view.InternalResourceView
			</value>
		</property>
		<!-- 设置前缀，即视图所在的路径 -->
		<property name="prefix" value="/jsp/" />
		<!-- 设置后缀，即视图的扩展名 -->
		<property name="suffix" value=".jsp" />
	</bean>


	<bean class="com.xmbl.ops.util.SpringApplicationContextHolder" /> 
	<mvc:resources location="/" mapping="/**" />
</beans>

